<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WideWorldImporters.Services</name>
    </assembly>
    <members>
        <member name="T:WideWorldImporters.Services.ExtensionMethods.IServiceCollectionExtensions">
            <summary>
            Extension methods for ServiceCollection
            </summary>
        </member>
        <member name="M:WideWorldImporters.Services.ExtensionMethods.IServiceCollectionExtensions.RegisterServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
            <summary>
            Register services for Dependency Injection
            </summary>
            <param name="serviceCollection"></param>
            <param name="namespaceName"></param>
            <returns></returns>
        </member>
        <member name="M:WideWorldImporters.Services.ExtensionMethods.IServiceCollectionExtensions.GetSingletonServices(System.String)">
            <summary>
            Gets all Singleton services
            </summary>
            <param name="namespaceName"></param>
            <returns></returns>
        </member>
        <member name="M:WideWorldImporters.Services.ExtensionMethods.IServiceCollectionExtensions.GetTransientServices(System.String)">
            <summary>
            Gets all Transient services
            </summary>
            <param name="namespaceName"></param>
            <returns></returns>
        </member>
        <member name="M:WideWorldImporters.Services.ExtensionMethods.IServiceCollectionExtensions.GetScopedServices(System.String)">
            <summary>
            Gets all Scoped services
            </summary>
            <param name="namespaceName"></param>
            <returns></returns>
        </member>
        <member name="M:WideWorldImporters.Services.ExtensionMethods.IServiceCollectionExtensions.GetServicesByType(WideWorldImporters.Core.Enumerations.ServiceLifetime.Lifetime,System.String)">
            <summary>
            Returns all services of a particular type
            </summary>
            <param name="namespaceName">Namespace name</param>
            <param name="lifetime">Type of service</param>
            <returns></returns>
        </member>
        <member name="M:WideWorldImporters.Services.ExtensionMethods.IServiceCollectionExtensions.GetAllServices(System.String)">
            <summary>
            Retrives all services in a namespace
            </summary>
            <param name="namespaceName"></param>
            <returns></returns>
        </member>
        <member name="T:WideWorldImporters.Services.Interfaces.ISampleService">
            <summary>
            Interface for Sample Service for Testing
            </summary>
        </member>
        <member name="M:WideWorldImporters.Services.Interfaces.ISampleService.HelloWorld">
            <summary>
            Hello World
            </summary>
            <returns></returns>
        </member>
        <member name="M:WideWorldImporters.Services.Interfaces.ISampleService.GetVehicleTempsAsync">
            <summary>
            Gets vehicle temperatures
            </summary>
            <returns></returns>
        </member>
        <member name="T:WideWorldImporters.Services.ServiceCollections.ApplicationServices">
            <summary>
            Services for the application
            </summary>
        </member>
        <member name="P:WideWorldImporters.Services.ServiceCollections.ApplicationServices.DbContext">
            <summary>
            Application Database context
            </summary>
        </member>
        <member name="P:WideWorldImporters.Services.ServiceCollections.ApplicationServices.AutoMapper">
            <summary>
            Automapper
            </summary>
        </member>
        <member name="P:WideWorldImporters.Services.ServiceCollections.ApplicationServices.MemoryCache">
            <summary>
            InMemory Local Caching
            </summary>
        </member>
        <member name="P:WideWorldImporters.Services.ServiceCollections.ApplicationServices.RedisService">
            <summary>
            Redis Caching
            </summary>
        </member>
        <member name="P:WideWorldImporters.Services.ServiceCollections.ApplicationServices.Logger">
            <summary>
            Logging service
            </summary>
        </member>
        <member name="M:WideWorldImporters.Services.ServiceCollections.ApplicationServices.#ctor(WideWorldImporters.Models.Database.WideWorldImportersContext,AutoMapper.IMapper,Microsoft.Extensions.Caching.Memory.IMemoryCache,WideWorldImporters.Core.CoreServices.Interfaces.IRedisService,WideWorldImporters.Logger.Interfaces.IWWILogger)">
            <summary>
            Constructor
            </summary>
            <param name="dbContext">Database context</param>
            <param name="autoMapper">Automapper</param>
            <param name="memoryCache">Memory Caching</param>
            <param name="redisService">Redis Caching</param>
            <param name="logger">Logging Service</param>
        </member>
        <member name="T:WideWorldImporters.Services.Services.Base.BaseService">
            <summary>
            Base classes for all services
            </summary>
        </member>
        <member name="P:WideWorldImporters.Services.Services.Base.BaseService.AppServices">
            <summary>
            Application Services
            </summary>
        </member>
        <member name="P:WideWorldImporters.Services.Services.Base.BaseService.DbContext">
            <summary>
            Application Database context
            </summary>
        </member>
        <member name="P:WideWorldImporters.Services.Services.Base.BaseService.AutoMapper">
            <summary>
            Automapper
            </summary>
        </member>
        <member name="P:WideWorldImporters.Services.Services.Base.BaseService.MemoryCache">
            <summary>
            Memory Caching
            </summary>
        </member>
        <member name="M:WideWorldImporters.Services.Services.Base.BaseService.#ctor(WideWorldImporters.Services.ServiceCollections.ApplicationServices)">
            <summary>
            Constructor
            </summary>
            <param name="applicationServices"></param>
        </member>
        <member name="T:WideWorldImporters.Services.Services.SampleService">
            <summary>
            Sample Service for Testing
            </summary>
        </member>
        <member name="M:WideWorldImporters.Services.Services.SampleService.#ctor(WideWorldImporters.Services.ServiceCollections.ApplicationServices)">
            <summary>
            
            </summary>
            <param name="applicationServices"></param>
        </member>
        <member name="M:WideWorldImporters.Services.Services.SampleService.HelloWorld">
            <summary>
            Hello world
            </summary>
            <returns></returns>
        </member>
        <member name="M:WideWorldImporters.Services.Services.SampleService.GetVehicleTempsAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
